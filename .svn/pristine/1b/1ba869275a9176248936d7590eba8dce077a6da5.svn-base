<template>
  <div class="SystemAuthConfig">
    <div>
      <Row>
        <Col span="12" class="rowCol rowCol1" :style="this.business == true ? rowColStyle : false"><h2 @click="businessShow">商家权限</h2></Col>
        <Col span="12" class="rowCol rowCol2" :style="this.manage == true ? rowColStyle : false"><h2  @click="manageShow">超管权限</h2></Col>
      </Row>
    </div>
    <Form :label-width="80" style="padding-top:20px;">
      <div class="FormItem">
        <FormItem label="权限名称" class="FormItem_inp">
          <Input v-model="queryParam.authName" clearable placeholder="请输入权限名称"></Input>
        </FormItem>
        <div style="text-align:right;margin-bottom:10px;">
          <Button type="success" @click="getList">搜索</Button>
          <Button type="primary" icon="plus" @click="addModelShow">新增</Button>
        </div>
      </div>
    </Form>
    <Table v-show="manage" border :columns="TableTop0" :data="tableData0"></Table>
    <Table v-show="business" style="margin-bottom:8px;" border :loading="loading" :columns="TableTop" :data="tableData"></Table>
    <Page width="100%" @on-change="pageTurn" :total="total" show-elevator style="text-align:right"></Page>
    

    <Modal v-model="addShow" title="新增">
      <Form :model="addData" ref="addForm" :rules="authRule" :label-width="80">
        <FormItem label="icon图片">
          <Upload :action="this.AjaxUrl + '/ty_manage/home/upload'"
                  :before-upload="addUploadBefore"
                  style="width: 100px; height: 100px"
                  type="drag">
            <div style="padding: 20px 0; width: 100px; height: 100px" v-if="this.PictureImg == null">
              <Icon type="ios-cloud-upload" size="50" style="color: #3399ff"></Icon>
              <p>点击上传图片</p>
            </div>
            <img v-if="this.PictureImg != null" :src="Imgjpg()" :alt="addData.title"
                 style="width: 100px; height: 100px">
          </Upload>
        </FormItem>
        <FormItem label="权限名称" prop="authName">
          <Input v-model="addData.authName" placeholder="请输入类型名称"></Input>
        </FormItem>
        <FormItem label="父权限">
          <Select v-model="addData.authParentId" style="width:200px">
            <Option value="0">无</Option>
            <Option v-for="item in parentAuthList" :value="item.systemAuthId" :key="item.systemAuthId">{{ item.authName }}</Option>
          </Select>
        </FormItem>
        <FormItem label="位置" v-show="siteShow">
          <Select v-model="addData.site" style="width:200px">
            <Option value="TOP">TOP</Option>
            <Option value="CENTRE">CENTRE</Option>
          </Select>
        </FormItem>
        <FormItem label="APP显示" v-show="AppShow">
          <Select v-model="addData.isApp" style="width:200px">
            <Option value="0">否</Option>
            <Option value="1">是</Option>
          </Select>
        </FormItem>
        <FormItem label="pc权限控制">
          <Input type="text" v-model="addData.pcAuthUrl" placeholder="请输入类型名称"></Input>
        </FormItem>
        <FormItem label="ios权限控制" v-show="iosShow">
          <Input type="text" v-model="addData.iosAuthUrl" placeholder="请输入类型名称"></Input>
        </FormItem>
        <FormItem label="排序" prop="sn">
          <InputNumber :max="99" :min="1" v-model="addData.sn"></InputNumber>
        </FormItem>
      </Form>
      <div slot="footer">
        <Button type="text" size="large" @click="addCancel('addForm')">取消</Button>
        <Button type="primary" size="large" :loading="addLoading" @click="add('addForm')">确认</Button>
      </div>
    </Modal>

    <Modal v-model="editShow" title="编辑">
      <Form :model="editData" ref="editForm" :rules="authRule" :label-width="80">
        <FormItem label="icon图片" prop="iconUrl">
          <Upload :action="this.AjaxUrl + '/ty_manage/home/upload'"
                  :before-upload="editUploadBefore"
                  style="width: 100px; height: 100px"
                  type="drag">
            <div style="padding: 20px 0; width: 100px; height: 100px" v-if="this.PictureImg == null">
              <Icon type="ios-cloud-upload" size="50" style="color: #3399ff"></Icon>
              <p>点击上传图片</p>
            </div>
            <img v-if="this.PictureImg != null" :src="Imgjpg()" :alt="editData.title"
                 style="width: 100px; height: 100px">
          </Upload>
        </FormItem>
        <FormItem label="权限名称" prop="authName">
          <Input v-model="editData.authName" placeholder="请输入类型名称"></Input>
        </FormItem>
        <FormItem label="父权限">
          <Select v-model="editData.authParentId" style="width:200px">
            <Option value="0">无</Option>
            <Option v-for="item in parentAuthList" :value="item.systemAuthId" :key="item.systemAuthId">{{ item.authName }}</Option>
          </Select>
        </FormItem>
        <FormItem label="位置" v-show="siteShow">
          <Select v-model="editData.site" style="width:200px">
            <Option value="TOP">TOP</Option>
            <Option value="CENTRE">CENTRE</Option>
          </Select>
        </FormItem>
        <FormItem label="APP显示" v-show="AppShow">
          <Select v-model="editData.isApp" style="width:200px">
            <Option value="0">否</Option>
            <Option value="1">是</Option>
          </Select>
        </FormItem>
        <FormItem label="pc权限控制">
          <Input type="text" v-model="editData.pcAuthUrl" placeholder="请输入类型名称"></Input>
        </FormItem>
        <FormItem label="ios权限控制" v-show="iosShow">
          <Input type="text" v-model="editData.iosAuthUrl" placeholder="请输入类型名称"></Input>
        </FormItem>
        <FormItem label="排序" prop="sn">
          <InputNumber :max="99" :min="1" v-model="editData.sn"></InputNumber>
        </FormItem>
      </Form>
      <div slot="footer">
        <Button type="text" size="large" @click="editCancel('addForm')">取消</Button>
        <Button type="primary" size="large" :loading="editLoading" @click="edit('editForm')">确认</Button>
      </div>
    </Modal>
    
    <Modal v-model="deleteShow" width="360">
      <p slot="header" style="color:#f60;text-align:center">
        <Icon type="information-circled"></Icon>
        <span>删除确认</span>
      </p>
      <div style="text-align:center">
        <p>确认要删除 {{ deleteFlag.typeName }} 吗?</p>
      </div>
      <div slot="footer">
        <Button type="error" size="large" long :loading="delLoading" @click="del">确认</Button>
      </div>
    </Modal>
  </div>
</template>
<script>
  import expandRow from './table-expand.vue';
  import expandRow0 from './table-expand0.vue';
  import {formatDate} from "../../../js/public";

  export default {
    components: { expandRow,  expandRow0},
    data() {
      return {
        rowColStyle: {
          backgroundColor: "#F8F8F9",
          color: "#2D8CF0",
          borderBottom: "2px solid #2D8CF0"
        },
        siteShow: true,
        AppShow: true,
        iosShow: true,
        loading: true,
        business: true,
        manage: false,
        queryParam: {
          pageNum: 1,
          authName: null
        },
        PictureImg: null,
        authRule: {
          authName: [
            {required: true, message: '权限名称不能为空', trigger: 'blur'}
          ],
          sn: [
            {required: true, type: 'number', message: '排序不能为空', trigger: 'blur'}
          ]
        },
        total: 0,
        tableData: [],
        tableData0: [],
        addShow: false,
        addLoading: false,
        editShow: false,
        editLoading: false,
        deleteShow: false,
        delLoading: false,
        deleteFlag: {
          systemAuthId: null,
          authName: null
        },
        editData: {
          systemAuthId: null,
          authName: null,
          authParentId: null,
          authType: 'NAVBAR',
          site: null,
          isApp: null,
          pcAuthUrl: null,
          iosAuthUrl: null,
          systemType: 'BUSINESS',
          iconUrl: null,
          sn: 99
        },
        addData: {
          authName: null,
          authParentId: '0',
          authType: 'NAVBAR',
          site: null,
          isApp: '0',
          pcAuthUrl: null,
          iosAuthUrl: null,
          systemType: 'BUSINESS',
          iconUrl: null,
          sn: 99
        },
        parentAuthList: [],
        iconUrl: null,
        TableTop0: [
          {
              type: 'expand',
              width: 50,
              render: (h, params) => {
                  return h(expandRow0, {
                      props: {
                          row: params.row.authList
                      }
                  })
              }
          },
          {
              title: "ID",
              key: "systemAuthId",
              width: 80,
              align: "center"
          },
          {
              title: "图片",
              key: "iconUrl",
              width: 90,
              align: "center",
              render: (h, params) => {
              return h('div', [
                  h("img", {
                  attrs: {
                      src: this.imgUrl + params.row.iconUrl + "_small.jpg",
                  },
                  style: {
                      width: '50px',
                      height: '50px'
                  }
                  })
              ]);
              }
          },
          {
              title: "权限名称",
              key: "authName",
              width: 150,
              align: "center",
          },
          {
              title: "父权限",
              key: "parentAuthName",
              width: 100,
              align: "center"
          },
          {
              title: "PC权限控制",
              key: "pcAuthUrl",
              align: "center"
          },
          {
              title: "系统类型",
              key: "systemType",
              width: 100,
              align: "center"
          },
          {
              title: "排序",
              key: "sn",
              width: 80,
              align: "center"
          },
          {
              title: "创建时间",
              key: "createTime",
              width: 160,
              align: "center",
              render: (h, params) => {
              return h("div", [
                  h("strong", formatDate(params.row.createTime, "yyyy-MM-dd HH:mm"))
              ]);
              }
          },
          {
              title: "操作",
              key: "userName",
              align: "center",
              width: 140,
              render: (h, params) => {
              return h('div', [
                  h('Button', {
                  props: {
                      type: 'primary',
                      size: 'small',
                      shape: 'circle',
                      icon: 'edit'
                  },
                  style: {
                      marginRight: '5px'
                  },
                  on: {
                      click: () => {
                      this.editModelShow(params.row)
                      }
                  }
                  }),
                  h('Button', {
                  props: {
                      type: 'error',
                      size: 'small',
                      shape: 'circle',
                      icon: 'trash-a'
                  },
                  on: {
                      click: () => {
                      this.deleteModelShow(params.row)
                      }
                  }
                  })
              ])
              }
          }
          ],
        TableTop: [
          {
              type: 'expand',
              width: 50,
              render: (h, params) => {
                  return h(expandRow, {
                      props: {
                          row: params.row.authList
                      }
                  })
              }
          },
          {
            title: "ID",
            key: "systemAuthId",
            width: 80,
            align: "center"
          },
          {
            title: "图片",
            key: "iconUrl",
            width: 90,
            align: "center",
            render: (h, params) => {
              return h('div', [
                h("img", {
                  attrs: {
                    src: this.imgUrl + params.row.iconUrl + "_small.jpg",
                  },
                  style: {
                    width: '50px',
                    height: '50px'
                  }
                })
              ]);
            }
          },
          {
            title: "权限名称",
            key: "authName",
            width: 100,
            align: "center",
          },
          {
            title: "父权限",
            key: "authParentId",
            width: 100,
            align: "center"
          },
          {
            title: "PC权限控制",
            key: "pcAuthUrl",
            align: "center"
          },
          {
            title: "APP权限控制",
            key: "iosAuthUrl",
            align: "center"
          },
          {
            title: "系统类型",
            key: "systemType",
            width: 100,
            align: "center"
          },
          {
            title: "位置",
            key: "site",
            width: 100,
            align: "center"
          },
          {
            title: "APP展示",
            key: "isApp",
            width: 100,
            align: "center",
            render: (h, params) => {
              let text;
              if (params.row.isApp === 1) {
                text = '是'
              } else {
                text = '否'
              }
              return h("div", [
                h("strong", text)
              ]);
            }
          },
          {
            title: "排序",
            key: "sn",
            width: 80,
            align: "center"
          },
          {
            title: "创建时间",
            key: "createTime",
            width: 160,
            align: "center",
            render: (h, params) => {
              return h("div", [
                h("strong", formatDate(params.row.createTime, "yyyy-MM-dd HH:mm"))
              ]);
            }
          },
          {
            title: "操作",
            key: "userName",
            align: "center",
            width: 140,
            render: (h, params) => {
              return h('div', [
                h('Button', {
                  props: {
                    type: 'primary',
                    size: 'small',
                    shape: 'circle',
                    icon: 'edit'
                  },
                  style: {
                    marginRight: '5px'
                  },
                  on: {
                    click: () => {
                      this.editModelShow(params.row)
                    }
                  }
                }),
                h('Button', {
                  props: {
                    type: 'error',
                    size: 'small',
                    shape: 'circle',
                    icon: 'trash-a'
                  },
                  on: {
                    click: () => {
                      this.deleteModelShow(params.row)
                    }
                  }
                })
              ])
            }
          }
        ]
      };
    },
    methods: {
      //商家/超管切换
      businessShow() {
        this.business = true;
        this.manage = false;
        this.siteShow = true;
        this.AppShow = true;
        this.iosShow = true;
      },
      manageShow() {
        this.business = false;
        this.manage = true;
        this.siteShow = false;
        this.AppShow = false;
        this.iosShow = false;
      },
      Imgjpg() {
        return this.PictureImg === null ? this.imgUrl + this.editData.iconUrl + '.jpg' : this.PictureImg;
      },
      /**
       * 翻页
       * @param pageNum
       */
      pageTurn(pageNum) {
        this.queryParam.pageNum = pageNum;
        this.getList();
      },
      /**
       * 查询商家权限
       */
      getList() {
        this.loading = true;
        let data = this.queryParam;
        let systemType = "BUSINESS";
        this.axios.get(`${this.AjaxUrl}/ty_manage/system/auth/getList`, {
          params: {
            data,
            systemType
          }
        }).then(res => {
          if (res.errorCode === 200) {
            this.tableData = res.data;
            // this.total = res.data.total;
          } else {
            this.$Message.error(res.message);
          }
          this.loading = false;
        }).catch(err => {
          console.log(err);
          this.loading = false;
        });
      },
      /**
       * 查询超管权限
       */
      getList0() {
          let systemType = "MANAGE";
          this.axios.get(`${this.AjaxUrl}/ty_manage/system/auth/getList`, {
          params: {
              systemType
          }
          }).then(res => {
          if (res.errorCode === 200) {
              this.tableData0 = res.data;
          } else {
              this.$Message.error(res.message);
          }
          }).catch(err => {
          console.log(err);
          });
      },
      /**
       * 新增model
       */
      addModelShow() {
        let systemType = "BUSINESS";
        if(this.business == true) {
          systemType = "BUSINESS";
        }else if(this.manage == true){
          systemType = "MANAGE";
        }
        this.axios.get(`${this.AjaxUrl}/ty_manage/system/auth/getParentAuthList`,{
            params: {systemType}
        } 
        )
          .then(res => {
            if (res.errorCode === 200) {
              this.parentAuthList = res.data;
            }
          }).catch(err => {
          console.log(err);
        });
        this.addShow = true;
      },
      /**
       * 取消新增
       */
      addCancel(name) {
        this.$refs[name].resetFields();
        this.addShow = false;
      },
      /**
       * 新增
       */
      add(name) {
        this.$refs[name].validate((valid) => {
          console.log(valid)
          if(this.manage == true){
            this.addData.systemType = "MANAGE";
          }
          if (valid) {
            this.axios.post(`${this.AjaxUrl}/ty_manage/system/auth/insert`,
              this.qs.stringify(this.addData)
            ).then(res => {
              if (res.errorCode === 200) {
                this.$Message.info("新增成功");
                this.getList();
                this.getList0();
                this.addShow = false;
              } else {
                this.$Message.error("新增失败");
              }
            }).catch(err => {
              console.log(err);
            });
          }
        });
      },
      /**
       * 编辑model
       * @param e
       */
      editModelShow(e) {
        let systemType = "BUSINESS";
        if(this.business == true) {
          systemType = "BUSINESS";
        }else if(this.manage == true){
          systemType = "MANAGE";
        }
        this.axios.get(`${this.AjaxUrl}/ty_manage/system/auth/getParentAuthList`,{
          params: {systemType}
        })
          .then(res => {
            if (res.errorCode === 200) {
              this.parentAuthList = res.data;
              console.log(this.parentAuthList);
            }
          }).catch(err => {
          console.log(err);
        });
        this.editData.systemAuthId = e.systemAuthId;
        this.editData.authName = e.authName;
        this.editData.authParentId = e.authParentId.toString();
        this.editData.authType = e.authType;
        this.editData.site = e.site;
        this.editData.isApp = e.isApp.toString();
        this.editData.pcAuthUrl = e.pcAuthUrl;
        this.editData.iosAuthUrl = e.iosAuthUrl;
        this.editData.systemType = e.systemType;
        this.editData.iconUrl = e.iconUrl;
        this.editData.sn = e.sn;
        this.editShow = true;
      },
      /**
       * 取消编辑
       */
      editCancel() {
        this.editShow = false;
      },
      /**
       * 编辑
       */
      edit(name) {
        this.$refs[name].validate((valid) => {
          if (valid) {
            if(this.manage == true){
              this.addData.systemType = "MANAGE";
            }
            this.axios.post(`${this.AjaxUrl}/ty_manage/system/auth/update`,
              this.qs.stringify(this.editData)
            ).then(res => {
              if (res.errorCode === 200) {
                this.$Message.info("编辑成功");
                this.getList();
                this.getList0();
                this.editShow = false;
                this.PictureImg = null;
              }
            }).catch(err => {
              this.$Message.error("编辑失败");
            });
          }
        })
      },
      deleteModelShow(e) {
        this.deleteFlag.systemAuthId = e.systemAuthId;
        this.deleteFlag.authName = e.authName;
        this.deleteShow = true;
      },
      del() {
        this.delLoading = true;
        console.log(this.deleteFlag.systemAuthId);
        this.axios.post(`${this.AjaxUrl}/ty_manage/system/auth/delete`,
          this.qs.stringify({systemAuthId: this.deleteFlag.systemAuthId})
        ).then(res => {
          if (res.errorCode === 200) {
            this.$Message.info("删除成功");
            this.getList();
            this.getList0();
            this.deleteShow = false;
          }
        }).catch(err => {
          this.$Message.error("删除失败");
        });
        this.delLoading = false;
      },
      addUploadBefore(file) {
        let reader = new FileReader();
        let _this = this;
        let data = new FormData();
        data.append("file", file);
        data.append("path", "systemAuth");
        this.axios
          .post(`${this.AjaxUrl}/ty_manage/home/upload`, data)
          .then(res => {
            if (res.errorCode === 200) {
              console.log(res.data);
              this.addData.iconUrl = res.data;
            } else {
              this.$Message.error(res.message);
            }
          }).catch(err => {
        });

        reader.readAsDataURL(file);
        reader.onload = function (e) {
          _this.PictureImg = this.result;
        };
        return false;
      },
      editUploadBefore(file) {
        let reader = new FileReader();
        let _this = this;
        let data = new FormData();
        data.append("file", file);
        data.append("path", "systemAuth");
        this.axios
          .post(`${this.AjaxUrl}/ty_manage/home/upload`, data)
          .then(res => {
            if (res.errorCode === 200) {
              console.log(res.data);
              this.editData.iconUrl = res.data;
            }
          }).catch(err => {
        });

        reader.readAsDataURL(file);
        reader.onload = function (e) {
          _this.PictureImg = this.result;
        };
        return false;
      },
      change(status) {
        console.log(status)
      }
    },
    mounted() {
      this.getList();
      this.getList0();
    }
  };
</script>

<style scoped>
  .rowCol{
    color: #495060;
    cursor: pointer;
    text-align: center;
    line-height: 50px;
    box-shadow: 0 1.5px 1.5px rgba(0,0,0,.1);
  }
  .rowCol1:hover{
    background-color: #EBF7FF;
  }
  .rowCol2:hover{
    background-color: #EBF7FF;
  }
  .SystemAuthConfig {
    background: #fff;
    padding: 0 20px;
  }

  .FormItem {
    display: flex;
  }

  .FormItem_inp {
    width: 300px;
    /*flex: 1;*/
  }
</style>

