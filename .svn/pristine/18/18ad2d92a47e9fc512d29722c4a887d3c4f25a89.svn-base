<template>
  <div class="packageAdd"> 
    <div class="packageAdd_title"> 编辑产品
       <button @click="closeShow"> <Icon type="close" ></Icon> </button>
    </div>
    <div> </div>
    <div style="width:100%;height: 650px;overflow: auto;"> 
      <div class="InputList" style="margin-top:20px;">
        <div>
            <label for="">名称</label>
            <Input style="width: 70%" v-model="productInformation.productName"></Input>
        </div>
        <div>
            <label for="">地址</label>
            <Input style="width: 70%" v-model="productInformation.address"></Input>
        </div>
      </div>         
      <div class="InputList">
        <div>
            <label for="">类型</label>
            <Select v-model="productInformation.productCategoryId"  style="width: 70%">
                <Option v-for="item in Selectmenu"  :key="item.name" :value="item.name"> {{item.label }} </Option>
            </Select>
        </div>
        <div>
            <label for="">商品标签</label>
            <Select v-model="productInformation.productTagId" multiple  style="width: 70%">
                <Option v-for="item in productTagList"  :key="item.name" :value="item.name"> {{item.label }} </Option>
            </Select>
        </div>
      </div>
      <div class="InputList">
        <div>
            <label for="">经纬度</label>
            <Input v-model="longitudelatitude"  @on-focus="Positioning"  style="width: 70%"></Input>
        </div>
        <div>
            <label for="">产品副标题</label>
            <Input v-model="productInformation.productTitle"   style="width: 70%"></Input>
        </div>
      </div> 
      <div class="InputList">
        <div>
            <label for="">地区</label>
            <Select style="width: 23.333%"  v-model="productInformation.provinceId">
                <Option v-for="item in province"  :key="item.name" :value="item.name">{{item.label }} </Option>
            </Select>
            <Select style="width: 23.333%" v-model="productInformation.cityId">
                <Option v-for="item in cityList"  :key="item.name" :value="item.name">{{item.label }} </Option>
            </Select>
            <Select style="width: 23.333%" v-model="productInformation.areaId">
                <Option v-for="item in categoryList"  :key="item.name" :value="item.name">{{item.label }} </Option>
            </Select>
        </div>
        <div> </div>
      </div> 
        
      <div style="margin-top:20px;background:#fff"> 
          <div v-for="(list,index) of imglist1" :key="index" class="imglist1 demo-upload-list"> 
            <img :src="smallImg1(index)" style="width:100px">
            <div class="demo-upload-list-cover"> 
                <Icon type="ios-eye-outline" @click.native="handleView1(index)"></Icon>
                <Icon type="ios-trash-outline" @click.native="handleRemove(index)"></Icon>
            </div>
          </div>
          
           <!-- <div v-for="(list,index) of imglist" class="imglist demo-upload-list"> 
             <img :src="smallImg(index)" style="width:100px">
             <div class="demo-upload-list-cover"> 
                 <Icon type="ios-eye-outline" @click.native="handleView(index)"></Icon>
                 <Icon type="ios-trash-outline" @click.native="handleRemove(index)"></Icon>
             </div>
           </div> -->

          <Upload  style="display:inline-block" multiple :before-upload="handleUpload" :show-upload-list="false" action="//jsonplaceholder.typicode.com/posts/">
            <img src="./../../../assets/a11.png" style="width:100px;height:100px;">
          </Upload>
      </div>
      
      <div style="height:35px;">
        <h3 style="font-weight: bold;float:left;padding-top:8px;"> &nbsp; 特色介绍 </h3>
        <Button type="success" @click="preview" style="float:right;margin-right:10px;">  预览内容</Button>
      </div>
      <div class="fuwenben" style="margin-top:10px;background:#fff">
        <div ref="editors"></div>
      </div>
          
      <div class="Btn">
         <Button type="success"  long @click="Changeproduct" :loading="loading" style="margin-top:15px;margin-bottom:10px;">更改</Button>
      </div>       
    </div>
    <Modal title="查看大图" v-model="visible">
        <div style="text-align:center;">
            <img :src="amplification" style="width:100%;">
        </div>
    </Modal>
    
    <Modal title="详情" v-model="productInfoShow" width="740px">
        <p ref="edit"></p>
    </Modal>
    <transition  enter-active-class="animated zoomInLeft" leave-active-class="animated zoomOutRight">
        <div id="maps" v-show="mapShow"  @click.stop="Stopclosing">
            <div class="maptitle">地图
                <div @click="ClosetheMap">
                <Icon type="close-circled"></Icon>
                </div>
            </div>
            <div id="container">
                <div>
                <label for="">地图</label>
                <input type="text" id="keyword" placeholder="请输入地址"></input>
                </div>
            </div>
            <div class="Btn">
                <Button type="success" @click="SubPositioning"  long> 提交</Button>
            </div>
        </div>
    </transition>
  </div>    
</template>
<script>
import E from "wangeditor";
export default {
  props: {
    productId: Object
  },
  data() {
    return {
      loading: false,
      productInfoShow: false,
      uploadList: [],
      Imgurl:[],
      editorImg: null,
      editorContent: "",
      auth_id: "",
      amplification: "",
      visible: false,
      imglist: [],
      imglist1: [],
      mapShow: false,
      isRealName: [],
      province: [],
      cityList: [],
      ZYBtype: false,
      Thirdparty: [
        {
          name: "TONGYOU",
          label: "同游平台"
        },
        {
          name: "ZYB",
          label: "智游宝"
        }
      ],
      categoryList: [],
      productTagList: [],
      Selectmenu: [],
      apiCode: "",
      longitudelatitude: "",
      productInformation: {
        detail: "",
        productName: "",
        address: "",
        longitude: "",
        latitude: "",
        provinceId: "",
        cityId: "",
        areaId: "",
        productCategoryId: "",
        productTagId: [],
        apiConfig: "TONGYOU",
        productTitle: ""
      },
      imglistId:[],
    };
  },
  watch: {
    //获取产品内容
    productId: function(val) {
        console.log(this.productId)
          let {
            apiCode,
            isRealName,
            productName,
            productTitle,
            productCategoryId,
            longitude,
            latitude,
            provinceId,
            cityId,
            areaId,
            address,
            detail,
            productTag
          } = this.productId;
          this.apiCode = apiCode;
          this.isRealName = isRealName;
          this.productInformation.provinceId = provinceId;
          this.productInformation.cityId = cityId;
          this.productInformation.areaId = areaId;
          this.productInformation.detail = detail;

          this.productInformation.productName = productName;
          this.productInformation.productTitle = productTitle;
          this.productInformation.productCategoryId = productCategoryId;
          this.productInformation.address = address;
          this.productInformation.longitude = longitude;
          this.productInformation.latitude = latitude;
          this.longitudelatitude = longitude + "," + latitude;

          let productTagId = productTag.split("|");
          for (let i = 0; i<productTagId.length; i++) {
            productTagId[i] = Number(productTagId[i]);
          }
          this.productInformation.productTagId = productTagId;

          let productPictureList = this.productId.productPictureList;
          this.imglist1 = [];
          for (let i of productPictureList) {
            this.imglist1.push({ url: i.pictureUrl });
            this.imglistId.push({ id: i.productPictureId})
            this.Imgurl.push({ url: " " });
            // this.uploadList.push("a");
          }
          var editors = new E(this.$refs.editors);
          editors.customConfig.zIndex = 100;
          // editors.customConfig.uploadImgShowBase64 = true;
          editors.customConfig.colors = [
          '#000000',
          '#eeece0',
          '#1c487f',
          '#4d80bf',
          '#c24f4a',
          '#8baa4a',
          '#7b5ba1',
          '#46acc8',
          '#f9963b',
          '#ffffff',
          '#0000C6',
          '#FF0000',
          '#00FF00',
          '#0000FF',
          '#FFFF00',
          '#00FFFF',
          '#FF00FF',
          '#C0C0C0'
        ];
        // 自定义菜单配置
        editors.customConfig.menus = [
            'head',  // 标题
            'bold',  // 粗体
            'fontSize',  // 字号
            'fontName',  // 字体
            'italic',  // 斜体
            'underline',  // 下划线
            'strikeThrough',  // 删除线
            'foreColor',  // 文字颜色
            'backColor',  // 背景颜色
            'link',  // 插入链接
            'list',  // 列表
            'justify',  // 对齐方式
            'quote',  // 引用
            'emoticon',  // 表情
            'image',  // 插入图片
            'table',  // 表格
            'code',  // 插入代码
            'undo',  // 撤销
            'redo'  // 重复
        ]
    var config = getCookie('token');
    var ImgUrl = this.imgUrl;
    editors.customConfig.uploadImgServer = `${this.AjaxUrl}/ty_manage/home/upload`;
    var data = new FormData();
    editors.customConfig.uploadImgParams = {
        file: "file"
    }
    editors.customConfig.uploadFileName = 'file';
    // editors.customConfig.uploadImgMaxSize = 10 * 1024 * 1024;
      editors.customConfig.uploadImgHeaders = {
          // 'Accept' : 'multipart/form-data',
          'token' : config
      };
      editors.customConfig.uploadImgHooks = {
          before: function (xhr, editor, files) {
              this.editorImg = files[0].name.split(".")
          },
          error: function (xhr, editor) {
              alert("2:"+"图片上传出错");
              // 图片上传出错时触发
              // xhr 是 XMLHttpRequst 对象，editor 是编辑器对象
          },
          fail: function (xhr, editor, result) {
              alert("1:"+xhr);
          },
          success:function(xhr, editor, result){
              console.log(result)
              // alert(result.data);
              // insertImg(result.data);
          },
          customInsert: function (insertImg, result, editor) {
              // 图片上传并返回结果，自定义插入图片的事件（而不是编辑器自动插入图片！！！）
              // insertImg 是插入图片的函数，editor 是编辑器对象，result 是服务器端返回的结果
              // 举例：假如上传图片成功后，服务器端返回的是 {url:'....'} 这种格式，即可这样插入图片：
              // alert(result.data+"123");
              console.log(result.data);
              let ext = this.editorImg;
              if(ext[1] == "png"){
                insertImg(ImgUrl+result.data+'.png');
              }else if(ext[1] == "jpg"){
                insertImg(ImgUrl+result.data+'.jpg');
              }
          }
      };
          editors.customConfig.onchange = html => {
            this.productInformation.detail = html;
          };
          editors.create();
          editors.txt.html("");
          editors.txt.html(detail);
    },
    "productInformation.productTagId": {
      handler: function(val, oldVal) {
        if (this.productInformation.productTagId.length > 3) {
          this.error("商品标签最多不超过3个");
          this.productInformation.productTagId.pop();
          console.log(this.productInformation.productTagId);
          return false;
        }
      },
      deep: true
    },
    "productInformation.apiConfig": {
      handler: function(val, oldVal) {
        if (val == "ZYB") {
          this.ZYBtype = true;
        } else {
          this.ZYBtype = false;
        }
      },
      deep: true
    },
    "productInformation.provinceId": {
      handler: function(val, oldVal) {
        this.Citychanges();
      },
      deep: true
    },
    "productInformation.cityId": {
      handler: function(val, oldVal) {
        this.Townchange();
      },
      deep: true
    }
  },
  methods: {
    //预览
    preview() {
      this.productInfoShow = true;
      this.$refs.edit.innerHTML = this.productInformation.detail;
      console.log(this.productInformation.detail);
    },
    //编辑产品提交
    Changeproduct() {
      let data = this.productInformation;
      data.productTag = "";
      for (let i = 0; i < this.productInformation.productTagId.length; i++) {
        if (i + 1 == this.productInformation.productTagId.length) {
          data.productTag += this.productInformation.productTagId[i];
        } else {
          data.productTag += this.productInformation.productTagId[i] + "|";
        }
      }
      data.productId = this.productId.productId;
      // data.detail = this.detail;
      // console.log(data.detail);
      this.loading = true;
      this.axios
        .post(
          `${this.AjaxUrl}/ty_manage/product/update`,
          this.qs.stringify(data)
        )
        .then(res => {
          if(res.errorCode == 200){
            this.loading = false;
            this.$emit("closes", true);
            this.$emit("closechang", true);
            console.log(res);
            this.success(res.message);
          }else{
            this.loading = false;
            this.error(res.message);
          }
        })
        .catch(err => {
          this.loading = false;
          this.error(err);
          console.log(err);
        });
    },
    // 产品列表
    List() {
      this.axios
        .get(`${this.AjaxUrl}/ty_manage/product/getList`, {
          params: {
            productName: this.productInformation.productName
          }
        })
        .then(res => {
          if(res.errorCode == 200) {
            let productPictureList = res.data.list[0].productPictureList;
            this.imglist1 = [];
            this.imglistId = [];
            for (let i of productPictureList) {
              this.imglist1.push({ url: i.pictureUrl });
              this.imglistId.push({ id: i.productPictureId });
            }
            console.log(imglist1);
          }
        })
        .catch(err => {});
    },
    // 上传图片
    handleUpload(file) {
      // const check = this.uploadList.length < 16;
      // if(check){
      var reader = new FileReader();
      var _this = this;
      let data = new FormData();
      data.append("sn", this.imglist1.length);
      data.append("productId", this.productId.productId);
      data.append("productPictureFile", file);
      this.axios
        .post(`${this.AjaxUrl}/ty_manage/product/picture/upload`, data)
        .then(res => {
          if (res.errorCode == 200) {
            // this.imglist1.push({ url: res.data });
            // this.uploadList.push("a");
            reader.readAsDataURL(file);
            reader.onload = function(e) {
            _this.Imgurl.push({url: this.result});
            };
            this.List();
          }else{
            this.error("图片上传错误")
          }
          console.log(res.errorCode);
        })
        .catch(err => {});
        // reader.readAsDataURL(file);
        // reader.onload = function(e) {
        //   console.log(this.result);
        //   _this.imgurl.push({url: this.result});
        // };
        
      // }else{
      //   this.error("上传图片不超过16张")
      //   return false;
      // }

    },

    //图片放大
    handleView(index) {
      this.visible = true;
      this.amplification = this.Imgurl[index].url;
    },
    handleView1(index) {
      this.visible = true;
      this.amplification = this.imgUrl + this.imglist1[index].url + "_small.jpg";
    },

    //图片删除
    handleRemove(index) {
      let data = {};
      // data.productId = this.productId;
      data.productPictureId = this.imglistId[index].id;
      this.axios
        .post(
          `${this.AjaxUrl}/ty_manage/product/picture/delete`,
          this.qs.stringify(data)
        )
        .then(res => {
          if (res.errorCode == 200) {
            console.log(res.message);
              this.imglist1.splice(index,1);
              this.Imgurl.splice(index,1);
              // this.uploadList.pop("a");
          }else{
            this.error(res.message);
          }
          return this.uploadList
        })
        .catch(err => {});
    },
    handleRemove1(index) {
      let data = {};
      data.productId = this.productId;
      data.pictureUrl = this.imglist1[index].url;
      this.axios
        .post(
          `${this.AjaxUrl}/ty_business/product/picture/delete`,
          this.qs.stringify(data)
        )
        .then(res => {
          if (res.errorCode == 200) {
            console.log(res.message);
              this.imglist1.splice(index,1);
              this.uploadList.pop("a");
          }else{
            this.error(res.message);
          }
          return this.uploadList , this.imglist1
        })
        .catch(err => {});
    },
    smallImg(index) {
      return this.Imgurl[index];
      // return this.ImgUrl + this.imglist[index].url + "_small.jpg";
    },
    smallImg1(index) {
      if(this.Imgurl[index].url != " ") {
        console.log(this.Imgurl[index].url);
        return this.Imgurl[index].url;
      }else {
        return this.imgUrl + this.imglist1[index].url + "_small.jpg";
      }
      // return this.imgUrl + this.imglist1[index].url + "_small.jpg";
    },
    ClosetheMap() {
      this.mapShow = false;
    },
    SubPositioning() {
      this.longitudelatitude =
        this.productInformation.longitude +
        "," +
        this.productInformation.latitude;
      this.mapShow = false;
    },
    CreateAproduct() {},
    Stopclosing() {},
    
    //地图地址提交
    Positioning() {
      this.mapShow = true;
      let marker;
      map.on("click", function(e) {
        if (marker) {
          marker.setMap(null);
          marker = null;
        }
        marker = new AMap.Marker({
          icon: "http://webapi.amap.com/theme/v1.3/markers/n/mark_b.png",
          position: [e.lnglat.getLng(), e.lnglat.getLat()]
        });
        marker.setMap(map);
        _this.productInformation.longitude = e.lnglat.getLng();
        _this.productInformation.latitude = e.lnglat.getLat();
      });
    },
    Provincialchange() {
      this.axios
        .get(`${this.AjaxUrl}/ty_manage/area/byPid`, {})
        .then(res => {
          let data = res.data;
          for (let i of data) {
            this.province.push({ label: i.areaName, name: i.areaId });
          }
          this.productInformation.provinceId = data[0].areaId;
        })
        .catch(err => {
          console.log(err);
        });
    },
    Citychanges() {
      this.axios
        .get(`${this.AjaxUrl}/ty_manage/area/byPid`, {
          params: {
            pid: this.productInformation.provinceId
          }
        })
        .then(res => {
          let data = res.data;
          this.cityList = [];
          for (let i of data) {
            this.cityList.push({ label: i.areaName, name: i.areaId });
          }
          this.productInformation.cityId = data[0].areaId;
        })
        .catch(err => {});
    },
    Townchange() {
      this.axios
        .get(`${this.AjaxUrl}/ty_manage/area/byPid`, {
          params: {
            pid: this.productInformation.cityId
          }
        })
        .then(res => {
          let data = res.data;
          this.categoryList = [];
          for (let i of data) {
            this.categoryList.push({ label: i.areaName, name: i.areaId });
          }
          // this.productInformation.areaId = data[0].areaId;
        })
        .catch(err => {});
    },
    closeShow() {
      console.log(this.productId);
      this.$emit("closechang", true);
    },
    error(text) {
      this.$Message.error(text);
    },
    success(text) {
      this.$Message.success(text);
    },

    //地图
    maps() {
      let _this = this;
      map = new AMap.Map("container", {
        resizeEnable: true,
        zoom: 11
      });
      //地图中添加地图操作ToolBar插件
      map.plugin(["AMap.ToolBar",'AMap.Autocomplete','AMap.PlaceSearch'], function() {
        //设置地位标记为自定义标记
        var toolBar = new AMap.ToolBar();
        map.addControl(toolBar);
        var autoOptions = {
            // city:'',//城市，默认全国
            input: "keyword"//使用联想输入的input的id
        };
        var autocomplete = new AMap.Autocomplete(autoOptions);
        var placeSearch = new AMap.PlaceSearch({
            // city:'',
            map:map
        });
        AMap.event.addListener(autocomplete, "select", function(e){
        //
        placeSearch.setCity(e.poi.adcode);
        placeSearch.search(e.poi.name);
        console.log(e.poi)
         let gps=[];
         gps.push(e.poi.location.lng)
         gps.push(e.poi.location.lat)
         _this.Gps=gps;
         _this.productInformation.longitude = e.poi.location.lng;
         _this.productInformation.latitude = e.poi.location.lat;
        });
      });
    }
  },
  created() {
    // this.auth_id = this.$route.params.id;

    this.Provincialchange();
    let _this = this;
    this.axios
      .all([
        this.axios.get(
          `${this.AjaxUrl}/ty_manage/product/category/getList`
        ),
        this.axios.get(`${this.AjaxUrl}/ty_manage/product/tag/getList`)
      ])
      .then(
        this.axios.spread(function(acct, perms) {
          // 两个请求现在都执行完成
          let datas = acct.data;
          for (let i of datas) {
            _this.Selectmenu.push({
              label: i.categoryName,
              name: i.productCategoryId
            });
          }
          _this.productInformation.productCategoryId =
            datas[0].productCategoryId;
          let data = perms.data;
          for (let i of data) {
            _this.productTagList.push({
              label: i.productTagName,
              name: i.productTagId
            });
          }
          // _this.productInformation.productTag = data[0].productTagId;
        })
      );
  },
  mounted() {
     this.maps();
  }
};
</script>

<style scoped>
.imglist {
  position: relative;
  display: inline-block;
  width: 100px;
}
.demo-upload-list {
  display: inline-block;
  width: 100px;
  height: 100px;
  text-align: center;
  line-height: 100px;
  border: 1px solid transparent;
  border-radius: 4px;
  overflow: hidden;
  background: #fff;
  position: relative;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);
  margin-right: 4px;
}
.demo-upload-list img {
  width: 100%;
  height: 100%;
}
.demo-upload-list-cover {
  display: none;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.6);
}
.demo-upload-list:hover .demo-upload-list-cover {
  display: block;
}
.demo-upload-list-cover i {
  color: #fff;
  font-size: 20px;
  cursor: pointer;
  margin: 0 10px;
}
#keyword{
  width: 30%;
  position: absolute;
  top: 20px;
  right: 0;
  z-index: 100;
  line-height: 30px;
  font-size: 15px;
  margin-right: 10px;
  padding-left: 5px;
  border-radius: 4px;
}
#maps {
  width: 740px;
  height: 580px;
  position: absolute;
  left: 50%;
  top: 50px;
  margin-left: -370px;
  background: #ffffff;
  z-index: 11999;
  border-radius: 12px;
  border: 2px solid #eee;
  
}
#maps .Btn {
    width: 100%;
    text-align: center;
    margin-top: 524px;
    height: 30px;
  }
#container {
    height: 520px;
    top: 40px;
  }
#maps .maptitle {
    height: 40px;
    font-size: 20px;
    line-height: 40px;
    text-indent: 20px;
    background: #eee;
    
  }
 #maps .maptitle div {
      float: right;
      height: 100%;
      width: 100px;
      cursor: pointer;
    }
.InputList{
    display: flex;
    margin-top: 10px;
}
.InputList div{
    flex: 1;
}
.InputList div label{
    display: inline-block;
    width: 72px;
    text-align: left;
}
.packageAdd {
  width: 70%;
  min-width: 800px;
  /* min-height: 600px; */
  border: 4px solid #eee;
  border-radius: 12px;
  position: absolute;
  top: 10%;
  left: 15%;
  background: #fff;
  opacity: 1 !important;
  z-index: 99;
  padding: 0 0 0 16px;
  overflow: auto;

}
.packageAdd_title {
    font-size: 16px;
    height: 35px;
    line-height: 35px;
}
.packageAdd_title button {
    float: right;
    padding: 3px 5px;
    border: none;
    background: #fff;
    width: 40px;
    cursor: pointer;
    outline: none;
}
.w-e-text img{
  width: 400px !important;
  height: 260px !important;
}
</style>
